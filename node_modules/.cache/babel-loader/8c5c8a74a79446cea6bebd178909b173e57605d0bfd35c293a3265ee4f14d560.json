{"ast":null,"code":"var _jsxFileName = \"/Users/bl4ze/web/worlde/src/components/GameRow.js\";\nimport Letter from './Letter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCorrespondingState(word, secret, setGameState, row) {\n  word = word.toUpperCase();\n  secret = [...secret.toUpperCase()];\n  let states = Array(5).fill(0);\n  word.split('').forEach((ch, idx) => {\n    if (ch === secret[idx]) {\n      states[idx] = 2;\n      secret[idx] = '!';\n    }\n  });\n  word.split('').forEach((ch, idx) => {\n    if (secret.includes(ch) && states[idx] === 0) {\n      states[idx] = 1;\n      secret[idx] = '!';\n    }\n  });\n  if (states.filter(state => state === 2).length === 5) {\n    setGameState(1);\n  }\n  return states;\n}\nfunction GameRow(props) {\n  let word = props.word;\n  let secret = props.secretWord;\n  const states = props.reveal ? getCorrespondingState(word, secret, props.setGameState, props.rowIdx) : Array(5).fill(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-row\",\n    children: [word.toUpperCase().split('').map((char, index) => /*#__PURE__*/_jsxDEV(Letter, {\n      char: char,\n      state: states[index],\n      pos: index,\n      reveal: props.reveal\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)), 5 - props.word.length > 0 && Array(5 - props.word.length).fill(0).map((_, idx) => /*#__PURE__*/_jsxDEV(Letter, {\n      char: '',\n      state: 0\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = GameRow;\nexport default GameRow;\nvar _c;\n$RefreshReg$(_c, \"GameRow\");","map":{"version":3,"names":["Letter","jsxDEV","_jsxDEV","getCorrespondingState","word","secret","setGameState","row","toUpperCase","states","Array","fill","split","forEach","ch","idx","includes","filter","state","length","GameRow","props","secretWord","reveal","rowIdx","className","children","map","char","index","pos","fileName","_jsxFileName","lineNumber","columnNumber","_","_c","$RefreshReg$"],"sources":["/Users/bl4ze/web/worlde/src/components/GameRow.js"],"sourcesContent":["import Letter from './Letter';\n\nfunction getCorrespondingState(word, secret, setGameState, row) {\n    word = word.toUpperCase();\n    secret = [...secret.toUpperCase()];\n\n    let states = Array(5).fill(0);\n    word.split('').forEach((ch, idx) => {\n        if (ch === secret[idx]) {\n            states[idx] = 2;\n            secret[idx] = '!';\n        }\n    });\n\n    word.split('').forEach((ch, idx) => {\n        if (secret.includes(ch) && states[idx] === 0) {\n            states[idx] = 1;\n            secret[idx] = '!';\n        }\n    });\n\n\n    if (states.filter(state => state === 2).length === 5) {\n        setGameState(1);\n    }\n\n    return states;\n}\n\nfunction GameRow(props) {\n    let word = props.word;\n    let secret = props.secretWord;\n    const states = props.reveal ? getCorrespondingState(word, secret, props.setGameState, props.rowIdx) : Array(5).fill(0);\n\n    return (\n        <div className='game-row'>\n            {word.toUpperCase().split('').map((char, index) => (\n                <Letter key={index} char={char} state={states[index]} pos={index} reveal={props.reveal} />\n            ))}\n            {(5-props.word.length) > 0 && Array(5-props.word.length).fill(0).map((_, idx) => (\n                    <Letter key={idx} char={''} state={0} />\n            ))}\n        </div>\n    );\n}\n\nexport default GameRow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}