{"ast":null,"code":"var _jsxFileName = \"/Users/bl4ze/web/worlde/src/components/GameRow.js\";\nimport Letter from './Letter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCorrespondingState(word, secret) {\n  word = word.toUpperCase();\n  secret = secret.toUpperCase();\n  let states = Array(5).fill(0);\n  let arr = Array.from(word).forEach((ch, idx) => {\n    if (ch == secret[idx]) {\n      states[idx] = 2;\n    }\n  });\n  Array.from(word).forEach((ch, idx) => {\n    if (ch != '0' && secret.includes(ch) && states[idx] == 0) {\n      states[idx] = 1;\n    }\n  });\n  return states;\n}\nfunction GameRow(props) {\n  let word = props.word;\n  let secret = props.secretWord;\n  const states = getCorrespondingState(word, secret);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-row\",\n    children: [Array.from(props.word).map((char, index) => /*#__PURE__*/_jsxDEV(Letter, {\n      char: char.toUpperCase(),\n      state: props.reveal ? states[index] : 0\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)), 5 - props.word.length > 0 && Array(5 - props.word.length).fill(0).map((_, idx) => /*#__PURE__*/_jsxDEV(Letter, {\n      char: '',\n      state: 0\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = GameRow;\nexport default GameRow;\nvar _c;\n$RefreshReg$(_c, \"GameRow\");","map":{"version":3,"names":["Letter","jsxDEV","_jsxDEV","getCorrespondingState","word","secret","toUpperCase","states","Array","fill","arr","from","forEach","ch","idx","includes","GameRow","props","secretWord","className","children","map","char","index","state","reveal","fileName","_jsxFileName","lineNumber","columnNumber","length","_","_c","$RefreshReg$"],"sources":["/Users/bl4ze/web/worlde/src/components/GameRow.js"],"sourcesContent":["import Letter from './Letter';\n\nfunction getCorrespondingState(word, secret) {\n    word = word.toUpperCase();\n    secret = secret.toUpperCase();\n    let states = Array(5).fill(0);\n    let arr = Array.from(word).forEach((ch, idx) => {\n        if (ch == secret[idx]) {\n            states[idx] = 2;\n        }\n    });\n\n    Array.from(word).forEach((ch, idx) => {\n        if (ch != '0' && secret.includes(ch) && states[idx] == 0) {\n            states[idx] = 1;\n        }\n    });\n\n    return states;\n}\n\nfunction GameRow(props) {\n    let word = props.word;\n    let secret = props.secretWord;\n    const states = getCorrespondingState(word, secret);\n    return (\n        <div className='game-row'>\n            {Array.from(props.word).map((char, index) => (\n                <Letter key={index} char={char.toUpperCase()} state={props.reveal ? states[index] : 0} />\n            ))}\n            {(5-props.word.length) > 0 && Array(5-props.word.length).fill(0).map((_, idx) => (\n                    <Letter key={idx} char={''} state={0} />\n            ))}\n        </div>\n    );\n}\n\nexport default GameRow;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,qBAAqBA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACzCD,IAAI,GAAGA,IAAI,CAACE,WAAW,CAAC,CAAC;EACzBD,MAAM,GAAGA,MAAM,CAACC,WAAW,CAAC,CAAC;EAC7B,IAAIC,MAAM,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAC7B,IAAIC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACP,IAAI,CAAC,CAACQ,OAAO,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;IAC5C,IAAID,EAAE,IAAIR,MAAM,CAACS,GAAG,CAAC,EAAE;MACnBP,MAAM,CAACO,GAAG,CAAC,GAAG,CAAC;IACnB;EACJ,CAAC,CAAC;EAEFN,KAAK,CAACG,IAAI,CAACP,IAAI,CAAC,CAACQ,OAAO,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;IAClC,IAAID,EAAE,IAAI,GAAG,IAAIR,MAAM,CAACU,QAAQ,CAACF,EAAE,CAAC,IAAIN,MAAM,CAACO,GAAG,CAAC,IAAI,CAAC,EAAE;MACtDP,MAAM,CAACO,GAAG,CAAC,GAAG,CAAC;IACnB;EACJ,CAAC,CAAC;EAEF,OAAOP,MAAM;AACjB;AAEA,SAASS,OAAOA,CAACC,KAAK,EAAE;EACpB,IAAIb,IAAI,GAAGa,KAAK,CAACb,IAAI;EACrB,IAAIC,MAAM,GAAGY,KAAK,CAACC,UAAU;EAC7B,MAAMX,MAAM,GAAGJ,qBAAqB,CAACC,IAAI,EAAEC,MAAM,CAAC;EAClD,oBACIH,OAAA;IAAKiB,SAAS,EAAC,UAAU;IAAAC,QAAA,GACpBZ,KAAK,CAACG,IAAI,CAACM,KAAK,CAACb,IAAI,CAAC,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpCrB,OAAA,CAACF,MAAM;MAAasB,IAAI,EAAEA,IAAI,CAAChB,WAAW,CAAC,CAAE;MAACkB,KAAK,EAAEP,KAAK,CAACQ,MAAM,GAAGlB,MAAM,CAACgB,KAAK,CAAC,GAAG;IAAE,GAAzEA,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsE,CAC3F,CAAC,EACA,CAAC,GAACZ,KAAK,CAACb,IAAI,CAAC0B,MAAM,GAAI,CAAC,IAAItB,KAAK,CAAC,CAAC,GAACS,KAAK,CAACb,IAAI,CAAC0B,MAAM,CAAC,CAACrB,IAAI,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,CAACU,CAAC,EAAEjB,GAAG,kBACpEZ,OAAA,CAACF,MAAM;MAAWsB,IAAI,EAAE,EAAG;MAACE,KAAK,EAAE;IAAE,GAAxBV,GAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACG,EAAA,GAdQhB,OAAO;AAgBhB,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}