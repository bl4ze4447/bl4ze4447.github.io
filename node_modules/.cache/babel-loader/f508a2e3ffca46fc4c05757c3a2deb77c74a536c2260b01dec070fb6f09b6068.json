{"ast":null,"code":"var _jsxFileName = \"/Users/bl4ze/web/worlde/src/components/GameRow.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Letter from './Letter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRow() {\n  _s();\n  const [word, setWord] = useState(Array);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-row\",\n    children: word.forEach(char => {\n      /*#__PURE__*/_jsxDEV(Letter, {\n        char: char,\n        state: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_s(GameRow, \"SHjlkeZ/XH5wMs1mtalK3J7NClQ=\");\n_c = GameRow;\nexport default GameRow;\nvar _c;\n$RefreshReg$(_c, \"GameRow\");","map":{"version":3,"names":["useState","Letter","jsxDEV","_jsxDEV","GameRow","_s","word","setWord","Array","className","children","forEach","char","state","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bl4ze/web/worlde/src/components/GameRow.js"],"sourcesContent":["import { useState } from 'react';\nimport Letter from './Letter'\n\nfunction GameRow() {\n    const [word, setWord] = useState(Array);\n    return (\n        <div className='game-row'>\n            {word.forEach((char) => {\n                <Letter char={char} state={1} />\n            })}\n        </div>\n    )\n}\n\nexport default GameRow;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAAC;EACvC,oBACIL,OAAA;IAAKM,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBJ,IAAI,CAACK,OAAO,CAAEC,IAAI,IAAK;MACpB,aAAAT,OAAA,CAACF,MAAM;QAACW,IAAI,EAAEA,IAAK;QAACC,KAAK,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACZ,EAAA,CATQD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AAWhB,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}