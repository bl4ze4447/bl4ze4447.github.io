{"ast":null,"code":"var _jsxFileName = \"/Users/bl4ze/web/worlde/src/components/GameGrid.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport GameRow from './GameRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameGrid() {\n  _s();\n  // fetch from a database\n  const secretWord = \"CAINE\";\n  const [rowIdx, setRowIdx] = useState(0);\n  const [words, updateWords] = useState(Array(6));\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        // check if the word is valid\n\n        // update colors\n\n        setRowIdx(val => val + 1);\n      } else if (event.key == 'Backspace') {} else if (event.key.match(/[a-z]/i) && event.key.length == 1) {}\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GameRow, {\n      word: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(GameGrid, \"3La5gKxgiwC1tbQFX6G8Y4N6STg=\");\n_c = GameGrid;\nexport default GameGrid;\nvar _c;\n$RefreshReg$(_c, \"GameGrid\");","map":{"version":3,"names":["useEffect","useState","GameRow","jsxDEV","_jsxDEV","GameGrid","_s","secretWord","rowIdx","setRowIdx","words","updateWords","Array","handleKeyDown","event","key","val","match","length","window","addEventListener","removeEventListener","children","word","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bl4ze/web/worlde/src/components/GameGrid.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport GameRow from './GameRow'\n\nfunction GameGrid() {\n    // fetch from a database\n    const secretWord = \"CAINE\";\n\n    const [rowIdx, setRowIdx] = useState(0);\n    const [words, updateWords] = useState(Array(6));\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n          if (event.key === 'Enter') {\n            // check if the word is valid\n            \n            // update colors\n\n            setRowIdx((val) => val+1);\n          } else if (event.key == 'Backspace') {\n\n          } else if (event.key.match(/[a-z]/i) && event.key.length == 1) {\n\n          }\n        };\n    \n        window.addEventListener('keydown', handleKeyDown);\n    \n        return () => {\n          window.removeEventListener('keydown', handleKeyDown);\n        };\n      }, []);\n\n\n\n    return (\n        <div>\n            <GameRow word=\"hello\" />\n            <GameRow word=\"\" />\n            <GameRow word=\"\" />\n            <GameRow word=\"\" />\n            <GameRow word=\"\" />\n            <GameRow word=\"\" />\n        </div>\n    )\n}\n\nexport default GameGrid;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAMC,UAAU,GAAG,OAAO;EAE1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,KAAK,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;EAE/CZ,SAAS,CAAC,MAAM;IACZ,MAAMa,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;QACzB;;QAEA;;QAEAN,SAAS,CAAEO,GAAG,IAAKA,GAAG,GAAC,CAAC,CAAC;MAC3B,CAAC,MAAM,IAAIF,KAAK,CAACC,GAAG,IAAI,WAAW,EAAE,CAErC,CAAC,MAAM,IAAID,KAAK,CAACC,GAAG,CAACE,KAAK,CAAC,QAAQ,CAAC,IAAIH,KAAK,CAACC,GAAG,CAACG,MAAM,IAAI,CAAC,EAAE,CAE/D;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEP,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXM,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAER,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAIR,oBACIT,OAAA;IAAAkB,QAAA,gBACIlB,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBvB,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBvB,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBvB,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBvB,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBvB,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd;AAACrB,EAAA,CAzCQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}