{"ast":null,"code":"import{useCallback,useEffect,useState}from'react';import GameRow from'./GameRow';import{WORDLIST}from'../wordlist/cuvinte';// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nimport{jsx as _jsx}from\"react/jsx-runtime\";const cyrb53=function(str){let seed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let h1=0xdeadbeef^seed,h2=0x41c6ce57^seed;for(let i=0,ch;i<str.length;i++){ch=str.charCodeAt(i);h1=Math.imul(h1^ch,2654435761);h2=Math.imul(h2^ch,1597334677);}h1=Math.imul(h1^h1>>>16,2246822507);h1^=Math.imul(h2^h2>>>13,3266489909);h2=Math.imul(h2^h2>>>16,2246822507);h2^=Math.imul(h1^h1>>>13,3266489909);return 4294967296*(2097151&h2)+(h1>>>0);};function getDailyWord(){const today=new Date().L;const epoch=new Date().valueOf();const rand=cyrb53((today-epoch)/86400000);return WORDLIST[rand%WORDLIST.length];}function GameGrid(props){const keys=props.keys;const simulateKey=props.simulateKey;const secretWord=getDailyWord();const[rowIdx,setRowIdx]=useState(0);const[words,updateWords]=useState(Array(6).fill(''));const[revealStates,setRevealStates]=useState(Array(6).fill(false));const[gameState,setGameState]=useState(0);const handleKeyDown=useCallback(key=>{const updateWordAtRow=word=>{const updatedWords=[...words];updatedWords[rowIdx]=word;updateWords(updatedWords);};if(rowIdx===6||gameState===1)return;if(key==='Enter'){if(words[rowIdx].length!==5||!WORDLIST.includes(words[rowIdx])){return;}setRevealStates(prevStates=>{const newStates=[...prevStates];newStates[rowIdx]=true;return newStates;});setRowIdx(Math.min(rowIdx+1,6));}else if(key==='Backspace'){updateWordAtRow(words[rowIdx].slice(0,-1));}else if(key.match(/[a-z]/i)&&key.length===1&&words[rowIdx].length<5){updateWordAtRow(words[rowIdx]+key);}},[rowIdx,words,gameState]);useEffect(()=>{const onKeyDown=e=>{handleKeyDown(e.key);};window.addEventListener('keydown',onKeyDown);return()=>{window.removeEventListener('keydown',onKeyDown);};},[handleKeyDown]);useEffect(()=>{if(keys.length>0){handleKeyDown(keys[0]);simulateKey(val=>{let newKeys=[...val.slice(1)];return newKeys;});}},[keys,simulateKey,handleKeyDown]);return/*#__PURE__*/_jsx(\"div\",{children:words.map((word,index)=>/*#__PURE__*/_jsx(GameRow,{word:word,secretWord:secretWord,reveal:revealStates[index],setGameState:setGameState},index))});}export default GameGrid;","map":{"version":3,"names":["useCallback","useEffect","useState","GameRow","WORDLIST","jsx","_jsx","cyrb53","str","seed","arguments","length","undefined","h1","h2","i","ch","charCodeAt","Math","imul","getDailyWord","today","Date","L","epoch","valueOf","rand","GameGrid","props","keys","simulateKey","secretWord","rowIdx","setRowIdx","words","updateWords","Array","fill","revealStates","setRevealStates","gameState","setGameState","handleKeyDown","key","updateWordAtRow","word","updatedWords","includes","prevStates","newStates","min","slice","match","onKeyDown","e","window","addEventListener","removeEventListener","val","newKeys","children","map","index","reveal"],"sources":["/Users/bl4ze/web/worlde/src/components/GameGrid.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport GameRow from './GameRow'\nimport { WORDLIST } from '../wordlist/cuvinte';\n\n\n// https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\nconst cyrb53 = (str, seed = 0) => {\n    let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n    for(let i = 0, ch; i < str.length; i++) {\n        ch = str.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1  = Math.imul(h1 ^ (h1 >>> 16), 2246822507);\n    h1 ^= Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2  = Math.imul(h2 ^ (h2 >>> 16), 2246822507);\n    h2 ^= Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n  \n    return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n};\n\nfunction getDailyWord() {\n    const today = new Date().L;\n    const epoch = new Date().valueOf();\n    const rand = cyrb53((today-epoch) / 86400000);\n    return WORDLIST[rand % WORDLIST.length];\n}\n\nfunction GameGrid(props) {\n    const keys = props.keys;\n    const simulateKey = props.simulateKey;\n\n    const secretWord = getDailyWord();\n\n    const [rowIdx, setRowIdx] = useState(0);\n    const [words, updateWords] = useState(Array(6).fill(''));\n    const [revealStates, setRevealStates] = useState(Array(6).fill(false));\n    const [gameState, setGameState] = useState(0);\n\n    const handleKeyDown = useCallback((key) => {\n        const updateWordAtRow = (word) => {\n            const updatedWords = [...words];\n            updatedWords[rowIdx] = word;\n            updateWords(updatedWords);\n        }\n\n        if (rowIdx === 6 || gameState === 1) return;\n\n        if (key === 'Enter') {\n            if (words[rowIdx].length !== 5 || !WORDLIST.includes(words[rowIdx])) {\n                return;\n            }\n\n            setRevealStates((prevStates) => {\n                const newStates = [...prevStates];\n                newStates[rowIdx] = true;\n                return newStates;\n            });\n\n            setRowIdx(Math.min(rowIdx + 1, 6));\n        } else if (key === 'Backspace') {        \n            updateWordAtRow(words[rowIdx].slice(0, -1));\n        } else if ((key.match(/[a-z]/i) && key.length === 1) && words[rowIdx].length < 5) {\n            updateWordAtRow(words[rowIdx] + key);\n        }\n      }, [rowIdx, words, gameState]);\n\n    useEffect(() => {\n        const onKeyDown = (e) => { handleKeyDown(e.key); }\n        window.addEventListener('keydown', onKeyDown);\n        return () => {\n          window.removeEventListener('keydown', onKeyDown);\n        };\n      }, [handleKeyDown]);\n\n      useEffect(() => {\n        if (keys.length > 0) {\n            handleKeyDown(keys[0]);\n            simulateKey((val) => {\n                let newKeys = [...val.slice(1)];\n                return newKeys;\n            });\n        }\n      }, [keys, simulateKey, handleKeyDown]);\n\n\n    return (\n        <div>\n            {words.map((word, index) => (\n                <GameRow key={index} word={word} secretWord={secretWord} reveal={revealStates[index]} setGameState={setGameState} />\n            ))}\n\n            {/* { gameState === 1 && (\n                <p className='game-state'>Ai castigat, felicitari!</p>\n            )}\n            { rowIdx === 6 && gameState === 0 && (\n                <p>Ai pierdut, cuvantul a fost {secretWord}!</p>\n            )} */}\n        </div>\n    )\n}\n\nexport default GameGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}