{"ast":null,"code":"var _jsxFileName = \"/Users/bl4ze/web/worlde/src/components/GameRow.js\";\nimport Letter from './Letter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCorrespondingState(word, secret) {\n  word = word.toUpperCase();\n  secret = [...secret.toUpperCase()];\n  let states = Array(5).fill(0);\n  word.split('').map((ch, idx) => {\n    if (ch == secret[idx]) {\n      states[idx] = 2;\n      secret[idx] = '!';\n    }\n  });\n  word.split('').forEach((ch, idx) => {\n    if (secret.includes(ch) && states[idx] == 0) {\n      states[idx] = 1;\n      secret[idx] = '!';\n    }\n  });\n  return states;\n}\nfunction GameRow(props) {\n  let word = props.word;\n  let secret = props.secretWord;\n  const states = props.reveal ? getCorrespondingState(word, secret) : Array(5).fill(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-row\",\n    children: Array.from(props.word).map((char, index) => /*#__PURE__*/_jsxDEV(Letter, {\n      char: char.toUpperCase(),\n      state: states\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = GameRow;\nexport default GameRow;\nvar _c;\n$RefreshReg$(_c, \"GameRow\");","map":{"version":3,"names":["Letter","jsxDEV","_jsxDEV","getCorrespondingState","word","secret","toUpperCase","states","Array","fill","split","map","ch","idx","forEach","includes","GameRow","props","secretWord","reveal","className","children","from","char","index","state","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bl4ze/web/worlde/src/components/GameRow.js"],"sourcesContent":["import Letter from './Letter';\n\nfunction getCorrespondingState(word, secret) {\n    word = word.toUpperCase();\n    secret = [...secret.toUpperCase()];\n\n    let states = Array(5).fill(0);\n    word.split('').map((ch, idx) => {\n        if (ch == secret[idx]) {\n            states[idx] = 2;\n            secret[idx] = '!';\n        }\n    });\n\n    word.split('').forEach((ch, idx) => {\n        if (secret.includes(ch) && states[idx] == 0) {\n            states[idx] = 1;\n            secret[idx] = '!';\n        }\n    });\n\n    return states;\n}\n\nfunction GameRow(props) {\n    let word = props.word;\n    let secret = props.secretWord;\n    const states = props.reveal ? getCorrespondingState(word, secret) : Array(5).fill(0);\n\n    return (\n        <div className='game-row'>\n            {Array.from(props.word).map((char, index) => (\n                <Letter key={index} char={char.toUpperCase()} state={states} />\n            ))}\n        </div>\n    );\n}\n\nexport default GameRow;"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,qBAAqBA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACzCD,IAAI,GAAGA,IAAI,CAACE,WAAW,CAAC,CAAC;EACzBD,MAAM,GAAG,CAAC,GAAGA,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;EAElC,IAAIC,MAAM,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAC7BL,IAAI,CAACM,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;IAC5B,IAAID,EAAE,IAAIP,MAAM,CAACQ,GAAG,CAAC,EAAE;MACnBN,MAAM,CAACM,GAAG,CAAC,GAAG,CAAC;MACfR,MAAM,CAACQ,GAAG,CAAC,GAAG,GAAG;IACrB;EACJ,CAAC,CAAC;EAEFT,IAAI,CAACM,KAAK,CAAC,EAAE,CAAC,CAACI,OAAO,CAAC,CAACF,EAAE,EAAEC,GAAG,KAAK;IAChC,IAAIR,MAAM,CAACU,QAAQ,CAACH,EAAE,CAAC,IAAIL,MAAM,CAACM,GAAG,CAAC,IAAI,CAAC,EAAE;MACzCN,MAAM,CAACM,GAAG,CAAC,GAAG,CAAC;MACfR,MAAM,CAACQ,GAAG,CAAC,GAAG,GAAG;IACrB;EACJ,CAAC,CAAC;EAEF,OAAON,MAAM;AACjB;AAEA,SAASS,OAAOA,CAACC,KAAK,EAAE;EACpB,IAAIb,IAAI,GAAGa,KAAK,CAACb,IAAI;EACrB,IAAIC,MAAM,GAAGY,KAAK,CAACC,UAAU;EAC7B,MAAMX,MAAM,GAAGU,KAAK,CAACE,MAAM,GAAGhB,qBAAqB,CAACC,IAAI,EAAEC,MAAM,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAEpF,oBACIP,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBb,KAAK,CAACc,IAAI,CAACL,KAAK,CAACb,IAAI,CAAC,CAACO,GAAG,CAAC,CAACY,IAAI,EAAEC,KAAK,kBACpCtB,OAAA,CAACF,MAAM;MAAauB,IAAI,EAAEA,IAAI,CAACjB,WAAW,CAAC,CAAE;MAACmB,KAAK,EAAElB;IAAO,GAA/CiB,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4C,CACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GAZQd,OAAO;AAchB,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}