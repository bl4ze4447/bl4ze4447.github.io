{"ast":null,"code":"var _jsxFileName = \"/Users/bl4ze/web/worlde/src/components/GameGrid.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport GameRow from './GameRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameGrid() {\n  _s();\n  // fetch from a database\n  const secretWord = \"CAINE\";\n  const [rowIdx, setRowIdx] = useState(0);\n  const [words, updateWords] = useState(Array(6));\n  useEffect(() => {\n    updateWords(Array(6).fill(\"\"));\n    const handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        // check if the word is valid\n\n        // update colors\n\n        setRowIdx(val => val + 1);\n      } else if (event.key == 'Backspace') {\n        let modifiedWords = words.map((val, idx) => {\n          if (idx == rowIdx) {\n            val = val.substring(0, val.length - 1);\n          }\n          return val;\n        });\n      } else if (event.key.match(/[a-z]/i) && event.key.length == 1) {}\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GameRow, {\n      word: words[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: words[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: words[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: words[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: words[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameRow, {\n      word: words[5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(GameGrid, \"3La5gKxgiwC1tbQFX6G8Y4N6STg=\");\n_c = GameGrid;\nexport default GameGrid;\nvar _c;\n$RefreshReg$(_c, \"GameGrid\");","map":{"version":3,"names":["useEffect","useState","GameRow","jsxDEV","_jsxDEV","GameGrid","_s","secretWord","rowIdx","setRowIdx","words","updateWords","Array","fill","handleKeyDown","event","key","val","modifiedWords","map","idx","substring","length","match","window","addEventListener","removeEventListener","children","word","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bl4ze/web/worlde/src/components/GameGrid.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport GameRow from './GameRow'\n\nfunction GameGrid() {\n    // fetch from a database\n    const secretWord = \"CAINE\";\n\n    const [rowIdx, setRowIdx] = useState(0);\n    const [words, updateWords] = useState(Array(6));\n\n    useEffect(() => {\n        updateWords(Array(6).fill(\"\"));\n        const handleKeyDown = (event) => {\n          if (event.key === 'Enter') {\n            // check if the word is valid\n            \n            // update colors\n\n            setRowIdx((val) => val+1);\n          } else if (event.key == 'Backspace') {\n            let modifiedWords = words.map((val, idx) => {\n                if (idx == rowIdx) {\n                    val = val.substring(0, val.length-1);\n                }\n\n                return val;\n            })\n\n          } else if (event.key.match(/[a-z]/i) && event.key.length == 1) {\n\n          }\n        };\n    \n        window.addEventListener('keydown', handleKeyDown);\n    \n        return () => {\n          window.removeEventListener('keydown', handleKeyDown);\n        };\n      }, []);\n\n\n\n    return (\n        <div>\n            <GameRow word={words[0]} />\n            <GameRow word={words[1]} />\n            <GameRow word={words[2]} />\n            <GameRow word={words[3]} />\n            <GameRow word={words[4]} />\n            <GameRow word={words[5]} />\n        </div>\n    )\n}\n\nexport default GameGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}